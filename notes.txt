API RESTful
Responsabilidades do backend (Node.js)
- Regras de negócio = núcleo da aplicação
- Conexão com banco de dados
- Envio de email ou conexão com serviços externos
- Autenticação e autorização
- Criptografia e segurança

Estrutura MVC x REST.
MVC - Envia o conteúdo completo da página com HTML incluso.
REST - Envia os dados pro usuário via JSON (JavaScript Object Notation).
- O front-end da estrutura REST é o responsável pela contrução de interfaces e como os dados serão utilizados.

Conceitos de TypeScript
JS com tipagem, facilita as alterações por informar os formatos que são enviados nos parâmetros e retornos
Bibliotecas para utilização do TS
- npm install typescript -D
- npm install express // gerenciador de rotas
- npm install @types/express -D
- npm install ts-node -D
- npm install ts-node-dev -D
- npx tsc --init
- npx ts-node-dev --ignore-watch node_modules [path] // adicionar como script no package (dev)

Biblioteca React - Construção de interfaces e do SPA
Vantagens
- Componentização
- Divisão de responsabilidade
- Uma API, múltiplos clientes
- npx create-react-app [directory] --template=typescript

Comandos para utilização do banco de dados
- npm install knex
- npm install mysql
- Criar arquivo knexfile.ts (Olhar documentação)
- npx knex --knexfile knexfile.ts migrate:latest // adicionar como script no package (knex:migrate)
- npx knex --knexfile knexfile.ts seed:run // adicionar como script no package (knex:seed)

Adicionando CORS (Cross Origin Resource Sharing)
- npm install cors
- npm install @types/cors -D

Biblioteca gratuita de mapas Leaflet
- npm install leaflet react-leaflet
- npm install @types/react-leaflet -D

Biblioteca de requisições
- npm install axios